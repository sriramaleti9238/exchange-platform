version: '3.8'

services:
  db:
    image: exchange/db
    build:
      context: backend-internal
      dockerfile: Dockerfile-postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=exchange
    healthcheck:
      test: [ "CMD-SHELL", "test $(psql -U postgres -d exchange -c 'SELECT count(id) FROM exchange.user' -t) -gt 0 || exit 1" ]
      interval: 10s
      retries: 20
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CREATE_TOPICS: "input-record:1:20"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  backend-internal:
    image: exchange/backend-internal
    build:
      context: backend-internal
      dockerfile: Dockerfile-backend-internal
    environment:
      DB_ADDRESS: db
      DB_PORT: 5432
      DB_NAME: exchange
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092  # Kafka server address
      SPRING_KAFKA_TOPIC: input-record  # Topic name to connect to
      SPRING_KAFKA_CONSUMER_GROUP: backend-internal
      KAFKA_NUM_PARTITIONS: 1
    ports:
      - 8070:8070
    depends_on:
      - kafka
      - db

  backend-external:
    image: exchange/backend-external
    build:
      context: backend-external
      dockerfile: Dockerfile-backend-external
    ports:
      - 8080:8080
    depends_on:
      - kafka
      - db
    environment:
      DB_ADDRESS: db
      DB_PORT: 5432
      DB_NAME: exchange
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092  # Kafka server address
      SPRING_KAFKA_TOPIC: input-record  # Topic name to connect to

#  frontend-client:
#    image: exchange/frontend-client
#    build:
#      context: frontend-client
#      dockerfile: Dockerfile-frontend-client