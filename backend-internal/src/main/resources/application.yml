spring:
  datasource:
    url: jdbc:postgresql://${DB_ADDRESS}:${DB_PORT}/${DB_NAME}?reWriteBatchedInserts=true
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      minimumIdle: 2
      maximumPoolSize: 10
      idleTimeout: 120000
      connectionTimeout: 300000
      leakDetectionThreshold: 1800000
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        # show_sql: true
        jdbc:
          time_zone: UTC
          batch_size: 100
        order_updates: true
        order_inserts: true
        batch_versioned_data: true
        default_batch_fetch_size: 100
        dialect: org.hibernate.dialect.PostgreSQLDialect
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.yaml
    enabled: true
  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS}
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.exchange.app.backend.common.config.UserTicketDeserializer
      group: ${SPRING_KAFKA_CONSUMER_GROUP}
      topic: ${SPRING_KAFKA_TOPIC}
  json:
    trusted:
      packages: "org.exchange.app.common.api, org.exchange.app.external.api"
    value:
      userTicket:
        type: org.exchange.app.common.api.model.UserTicket
server:
  error:
    include-message: always