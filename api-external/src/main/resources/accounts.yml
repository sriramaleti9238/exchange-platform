openapi: "3.1.0"
info:
  title: Exchange App Accounts API
  description: This is a REST API for Exchange System application for Accounts Management.
  version: 1.0.0
servers:
  - url: http://localhost:8080/
paths:
  /accounts/deposit:
    post:
      summary: Save Deposit for User Account
      operationId: saveAccountDeposit
      requestBody:
        description: new deposit data
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserAccountOperation"
      tags:
        - accounts
      responses:
        '204':
          description: Operation completed successfully
        '404':
          description: Error user or account not found.
  /accounts/{userId}/list:
    get:
      summary: Load accounts for the user
      operationId: loadAccountBalanceList
      parameters:
        - in: path
          name: userId
          schema:
            type: string
            format: uuid
          required: true
          description: Numeric ID of the user to get
      tags:
        - accounts
      responses:
        '200':
          description: Operation completed successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AccountBalance"
  /accounts/withdraw:
    post:
      summary: Save Exchange Ticket
      operationId: saveWithdrawRequest
      requestBody:
        description: new exchange ticket object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserAccountOperation"
      tags:
        - accounts
      responses:
        '204':
          description: Operation completed successfully
        '404':
          description: Error user or account not found.
        '400':
          description: Returned when a user has insufficient funds for a money operation.
  /accounts/user/account:
    post:
      summary: Create User Account
      operationId: createUserAccount
      requestBody:
        description: User Account details
        required: true
        content:
          application/json:
            schema:
              type: UserAccount
      tags:
        - accounts
      responses:
        '201':
          description: user account created
          content:
            application/json:
              schema:
                type: UserAccount
        '400':
          description: Returned when unable to create user account.

  /accounts/user/account/{accountId}:
    put:
      summary: Update User Account
      operationId: updateUserAccount
      parameters:
        - in: path
          name: accountId
          schema:
            type: string
            format: uuid
          required: true
          description: UUID ID of the user account
      requestBody:
        description: User Account details
        required: true
        content:
          application/json:
            schema:
              type: UserAccount
      tags:
        - accounts
      responses:
        '204':
          description: user account updated
          content:
            application/json:
              schema:
                type: UserAccount

  /accounts/operations:
    post:
      summary: Get all operations related to the User
      operationId: loadUserOperationList
      requestBody:
        description: account operation request object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountOperationsRequest"
      tags:
        - accounts
      responses:
        '200':
          description: Successfully retrieved all user operations, returning a list of UserOperation objects.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: UserOperation
                  description: An array of UserOperation objects, each representing financial operation associated with the user.
        '404':
          description: Error user or account not found.
  /accounts/user/{userId}/property:
    get:
      summary: Get user property
      operationId: getUserPropertyById
      parameters:
        - in: path
          name: userId
          schema:
            type: string
            format: uuid
          required: true
          description: UUID ID of the user
      tags:
        - accounts
      responses:
        '200':
          description: user account object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProperty"
        '404':
          description: user account not found
    post:
      summary: Save user property
      operationId: saveUserProperty
      parameters:
        - in: path
          name: userId
          schema:
            type: string
            format: uuid
          required: true
          description: UUID ID of the user
      requestBody:
        description: user property object to save
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserProperty"
      tags:
        - accounts
      responses:
        '201':
          description: user property created
        '404':
          description: user account not found
    patch:
      summary: Get user properties
      operationId: updateUserProperty
      parameters:
        - in: path
          name: userId
          schema:
            type: string
            format: uuid
          required: true
          description: UUID ID of the user
      requestBody:
        description: user property object to update
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserProperty"
      tags:
        - accounts
      responses:
        '204':
          description: user property updated
        '404':
          description: user account not found
components:
  schemas:
    UserAccountOperation:
      type: object
      required:
        - userId
        - currency
        - value
      properties:
        userId:
          type: string
          format: uuid
        currency:
          type: string
        value:
          type: integer
          format: int64
    AccountBalance:
      type: object
      properties:
        currency:
          type: string
        amount:
          type: integer
          format: int64
    UserBalanceRequest:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        currency:
          type: string
    AccountOperationsRequest:
      type: object
      required:
        - userId
        - dateFrom
      properties:
        userId:
          type: string
          format: uuid
        currency:
          type: string
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time
        page:
          type: integer
        size:
          type: integer
    UserProperty:
      type: object
      required:
        - language
        - timezone
      properties:
        language:
          type: string
        timezone:
          type: string
        userId:
          type: string
          format: uuid